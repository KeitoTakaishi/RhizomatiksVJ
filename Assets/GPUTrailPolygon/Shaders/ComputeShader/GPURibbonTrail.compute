#pragma kernel update
#define BLOCK_SIZE 128
#define THREAD [numthreads(BLOCK_SIZE,1,1)]
#include "../Noise4d.cginc"
#include "../NoiseUtils.cginc"

RWStructuredBuffer<float3> positionBuffer;
RWStructuredBuffer<float3> velocityBuffer;
RWStructuredBuffer<float3> normalBuffer;
RWStructuredBuffer<float3> topPosBuffer;
float time;
float low;
float kick;
float rythm;
float amp;
THREAD
void update (uint2 id : SV_DispatchThreadID)
{
	int idx = id.x;

	if (fmod(idx, BLOCK_SIZE) == 0) {
		float3 pos = positionBuffer[idx];
		//pos = float3(0.0, 0.1*sin(time*10.0 + idx), 0.0);
		pos = float3(0.0,low*rnd(float2(low, idx))*amp, 0.0);
		
		positionBuffer[idx] = pos;
	}
	else {
		positionBuffer[idx] = positionBuffer[idx - 1];
		//velocityBuffer[idx] = velocityBuffer[idx - 1];

	}
}

